#N canvas 0 354 464 222 10;
#X declare -lib timbreIDLib -path ./lib;
#N canvas 0 22 450 300 arrays 0;
#X obj 10 10 clone fd_arrayclone 42 define c;
#X restore 327 75 pd arrays;
#N canvas 432 247 390 339 play 0;
#N canvas 0 22 450 300 simple 0;
#X obj 65 256 dac~;
#X obj 79 185 tabplay~ c-0;
#X obj 138 99 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 86 138 set c-\$1 \, bang;
#X obj 296 171 text get filenames;
#X msg 56 52 stop;
#X msg 143 50 0;
#X obj 219 97 counter;
#X obj 309 111 text size filenames;
#X obj 295 144 mod 42;
#X obj 190 199 array size;
#X obj 190 221 / 44100;
#X obj 190 243 / 60;
#X msg 193 157 symbol c-\$1;
#X obj 193 179 t b a;
#X obj 307 208 list prepend;
#X obj 219 119 t a a a;
#X obj 225 72 t b b;
#X obj 338 269 print playing:;
#X obj 322 238 list trim;
#X msg 190 265 list size: \$1 minutes;
#X obj 104 52 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X connect 1 0 0 0;
#X connect 1 0 0 1;
#X connect 1 1 2 0;
#X connect 2 0 17 0;
#X connect 3 0 1 0;
#X connect 4 0 15 1;
#X connect 5 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 16 0;
#X connect 8 0 9 1;
#X connect 9 0 4 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 20 0;
#X connect 13 0 14 0;
#X connect 14 0 10 0;
#X connect 14 1 10 1;
#X connect 15 0 19 0;
#X connect 16 0 3 0;
#X connect 16 1 13 0;
#X connect 16 2 9 0;
#X connect 17 0 7 0;
#X connect 17 1 8 0;
#X connect 19 0 18 0;
#X connect 20 0 15 0;
#X connect 21 0 2 0;
#X restore 24 258 pd simple play;
#N canvas 302 62 726 716 messaging 0;
#X obj 53 365 s \$0-tID;
#X obj 414 349 s \$0-tID;
#X msg 528 291 stutter_protect \$1;
#X obj 528 271 r stutter_protect;
#X msg 174 220 neighborhood \$1;
#X obj 174 170 r neighborhood;
#X obj 174 192 i;
#X msg 53 161 search_center \$1;
#X obj 53 111 r search_center;
#X obj 53 133 i;
#X obj 480 198 r reorient;
#X msg 480 218 reorient \$1;
#X msg 414 149 jump_prob \$1;
#X obj 414 129 r jump_prob;
#X msg 261 309 max_matches \$1;
#X obj 261 259 r max_matches;
#X text 51 25 Here we just get the data from the sliders in the main
analysis control panel and send it to the appropriate messages for
timbreID.;
#X obj 202 371 r num_instances;
#X obj 200 484 pack f f;
#X obj 250 462 / 2;
#X msg 200 513 \; max_matches-set 10 \; jump_prob-set 0.1 \; reorient-set
0 \; search_center-set \$2 \; neighborhood-set \$1 \; stutter_protect-set
1 \; grain-size-low-set 110 \; grain-size-hi-set 130 \;;
#X msg 376 488 \; search_center-set range 0 \$1 \; neighborhood-set
range 0 \$1 \;;
#X obj 200 422 t f f f;
#N canvas 327 284 949 494 MORE_INFO 0;
#X text 17 8 When timbreID receives a new feature to compare against
its database of previously stored instances \, it searches the entire
database. The messages in this panel let you restrict that search.
;
#X text 17 360 You could also restrict the search in order to steer
the synthesis toward a certain type of sound. If you know that the
beginning of your source sound file has piano sounds \, and the end
has violin sounds \, you might want to move search_center toward the
latter half of the database to get violin-ish sounds. Or \, you might
put it right in the middle to increase your chances of getting a hybrid
of both.;
#X text 17 310 You might restrict the search in this way in order to
reduce CPU load. With thousands of instances \, repeated real time
searches can be taxing.;
#X text 17 70 "neighborhood" lets you specify the number of instances
to search \, and the value of "search_center" is the center of that
neighborhood. A simple example: with a database of only 11 instances
\, neighborhood=7 \, and search_center=4 \, timbreID would only search
instances 1 through 7 when trying to find a best match (4-3 on the
low end and 4+3 on the high end).;
#X text 492 129 Better still \, "reorient" automatically shifts the
search_center based on the most recent match. Continuing with the simple
example from above \, if reorient is active and instance 6 is found
to be the best match \, search_center is automatically set to 6 \,
and (because the neighborhood is still 7) the new search area is 3
through 9.. So \, if your input signal suddenly changes character \,
the system should gradually nudge it's way to the region in the source
sound file that best suits the input. This assumes that the source
file is not completely randomly assembled \, i.e. \, if the last part
has violin sounds \, it should last for seconds rather than milliseconds.
;
#X text 492 302 Last \, "max_matches" potentially has an impact on
how continuous the output sounds. If max_matches = 5 \, timbreID will
find the top 5 matches \, and check to see how they compare with the
grain from the previous match. If one of these 5 is a better match
to the previous grain than the current input grain \, the previous
grain is prioritized when it comes time to report the best match. Increasing
max_matches will increase CPU load \, and if it gets too high the output
will bear less of a resemblance to the input.;
#X text 492 21 "jump_prob" lets you specify a probability value between
0 and 1 determining the chance of reassigning search_center to a random
location in the database. Neighbhorhood is unaffected. You could use
this so that the sound doesn't get stuck using a particular range of
source grains. There is also a "stutter_protect" option that does not
allow the same match to be output twice in a row.;
#X text 17 170 Note: if the combination of search_center and neighborhood
reach past the boundaries of the database \, it wraps around to the
beginning. So if you want to eliminate the possibility of choosing
grains from the beginning of your source sound file \, make sure your
neighborhood doesn't reach past the number of instances in your database.
When you load your file \, feedback in Pd's post window will let you
know how many instances have been loaded. You can also use timbreID's
"print" method to post that information to the post window.;
#X restore 72 608 pd MORE_INFO;
#X obj 279 669 hsl 256 15 0 6721 0 0 search_center search_center-set
search-center -2 -8 0 12 -262144 -1 -1 0 1;
#X obj 36 669 tgl 15 0 reorient reorient-set reorient 17 7 0 12 -262144
-1 -1 0 1;
#X obj 36 689 tgl 15 0 stutter_protect stutter_protect-set stutter-protect
17 7 0 12 -262144 -1 -1 0 1;
#X obj 279 709 hsl 256 15 0 6721 0 0 neighborhood neighborhood-set
neighborhood -2 -8 0 12 -262144 -1 -1 0 1;
#X obj 39 779 hsl 256 15 0 1 0 0 jump_prob jump_prob-set jump-prob
-2 -8 0 12 -262144 -1 -1 0 1;
#X floatatom 547 669 10 0 0 0 - search_center -;
#X floatatom 547 709 10 0 0 0 - neighborhood -;
#X floatatom 36 739 10 0 0 1 max_matches max_matches-set max_matches
;
#X connect 2 0 1 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X connect 5 0 6 0;
#X connect 6 0 4 0;
#X connect 7 0 0 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 10 0 11 0;
#X connect 11 0 1 0;
#X connect 12 0 1 0;
#X connect 13 0 12 0;
#X connect 14 0 0 0;
#X connect 15 0 14 0;
#X connect 18 0 20 0;
#X connect 19 0 18 1;
#X connect 22 0 18 0;
#X connect 22 1 19 0;
#X connect 22 2 21 0;
#X restore 24 279 pd messaging;
#N canvas 0 22 450 541 old_player 0;
#X obj 41 347 f;
#X obj 81 307 t b f;
#X obj 76 333 + 1;
#X obj 76 355 mod 32;
#X obj 189 70 r indices;
#X obj 55 59 r index;
#X obj 187 208 list length;
#X obj 82 187 f;
#X obj 125 202 mod;
#X obj 95 254 list store;
#X obj 54 103 t b f;
#X obj 61 78 pipe;
#X obj 54 147 t b f;
#X obj 54 125 random;
#X obj 188 92 list prepend append;
#X obj 188 114 list trim;
#X obj 179 159 list store;
#X obj 313 48 r done_parse;
#X obj 243 137 r begin_parse;
#X msg 96 232 get \$1 2;
#X obj 187 230 print;
#X obj 312 69 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 86 280 unpack;
#X obj 109 393 pack f f f;
#X obj 111 151 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 125 180 + 2;
#X obj 179 180 t a a;
#N canvas 0 22 450 300 gate_and_random_spacing 0;
#X obj 107 162 list split 1;
#X obj 108 141 list;
#X obj 107 184 t b f;
#X obj 43 148 del;
#X obj 265 136 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 107 96 t a b;
#X msg 173 93 0;
#X msg 209 48 1;
#X obj 105 71 spigot 1;
#X obj 113 32 inlet;
#X obj 147 262 outlet;
#X obj 108 212 crand 1 10;
#X connect 0 0 2 0;
#X connect 0 1 1 1;
#X connect 0 2 4 0;
#X connect 1 0 0 0;
#X connect 2 0 11 0;
#X connect 3 0 1 0;
#X connect 4 0 7 0;
#X connect 5 0 1 0;
#X connect 5 1 6 0;
#X connect 6 0 8 1;
#X connect 7 0 8 1;
#X connect 8 0 5 0;
#X connect 9 0 10 0;
#X connect 11 0 3 0;
#X restore 218 376 pd gate_and_random_spacing;
#X connect 0 0 2 0;
#X connect 0 0 23 0;
#X connect 1 0 0 0;
#X connect 1 1 23 1;
#X connect 2 0 3 0;
#X connect 3 0 0 1;
#X connect 6 0 8 1;
#X connect 6 0 20 0;
#X connect 7 0 19 0;
#X connect 7 0 25 0;
#X connect 8 0 7 1;
#X connect 9 0 22 0;
#X connect 10 0 13 0;
#X connect 10 1 13 1;
#X connect 11 0 10 0;
#X connect 12 0 7 0;
#X connect 12 1 11 1;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 26 0;
#X connect 19 0 9 0;
#X connect 21 0 16 0;
#X connect 22 0 1 0;
#X connect 22 1 23 2;
#X connect 24 0 7 0;
#X connect 25 0 8 0;
#X connect 26 0 9 1;
#X connect 26 1 6 0;
#X restore 24 300 pd old_player;
#N canvas 0 22 450 300 _grain_player 0;
#X obj 92 163 hip~ 5;
#X obj 92 191 throw~ dacout-1;
#X obj 140 171 throw~ dacout-2;
#X obj 93 129 *~ 4;
#X obj 138 150 hip~ 5;
#X obj 138 129 *~ 4;
#X obj 93 99 rev3~ 110 50 3000 25;
#X obj 93 70 clone _grain_player 100;
#X obj 91 46 r _grain_player;
#X connect 0 0 1 0;
#X connect 3 0 0 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X connect 6 0 3 0;
#X connect 6 1 5 0;
#X connect 7 0 6 0;
#X connect 8 0 7 0;
#X restore 82 166 pd _grain_player;
#N canvas 150 22 965 756 parse_response 0;
#X obj 704 117 r indices;
#X obj 775 165 t a a;
#X obj 734 194 list split 1;
#X obj 848 194 list split 1;
#X obj 769 219 list prepend append;
#X obj 769 241 list trim;
#X obj 757 300 list store;
#X obj 150 158 r index;
#X obj 189 606 f;
#X obj 229 566 t b f;
#X obj 224 592 + 1;
#X obj 224 614 mod 32;
#X obj 224 652 pack f f f;
#X obj 704 143 t b a b, f 25;
#X text 827 273 file_index;
#X obj 706 65 text define responses;
#X obj 757 322 list prepend;
#X obj 757 344 t a b;
#X obj 757 366 text set responses;
#X msg 798 343 1e+20;
#X obj 707 21 r begin_parse;
#X msg 707 43 clear;
#X obj 260 210 text sequence responses;
#X msg 258 188 line 0 \, auto;
#X obj 260 232 t a b;
#X obj 300 160 text define response_player;
#X obj 260 261 text set response_player;
#X msg 309 238 1e+20;
#X msg 538 246 0;
#X msg 448 244 1;
#X obj 255 100 t b b b;
#X msg 298 132 clear;
#X obj 189 426 list length;
#X obj 122 434 random;
#X obj 147 492 list store;
#X msg 146 471 get \$1 1;
#X obj 163 299 t b b;
#X obj 204 399 t a a;
#X obj 23 462 t b f;
#X obj 21 417 del;
#X obj 23 440 crand 1 10;
#X obj 145 514 route bang;
#X obj 201 544 t b f;
#X obj 192 322 f;
#X obj 253 73 r end_parse;
#X obj 150 211 t b f f, f 13;
#X obj 222 352 spigot 1;
#X floatatom 231 475 5 0 0 0 - - -;
#X obj 548 471 list split 1;
#X obj 583 549 list store;
#X obj 582 494 list prepend append;
#X obj 582 516 list trim;
#X obj 470 362 sel -1;
#X obj 513 388 t f f;
#X obj 513 442 t b a;
#X obj 583 571 t a b;
#X obj 456 509 route bang;
#X obj 471 338 text search response_player 0;
#X obj 509 417 text get response_player;
#X obj 455 383 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X floatatom 569 384 5 0 0 0 - - -;
#X obj 456 531 text size response_player;
#X obj 456 553 t b f;
#X obj 456 575 random;
#X obj 456 597 text get response_player;
#X obj 454 620 list split 1;
#X obj 224 674 s _grain_player;
#X connect 0 0 13 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 2 1 4 0;
#X connect 3 0 16 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 16 0;
#X connect 7 0 45 0;
#X connect 8 0 10 0;
#X connect 8 0 12 0;
#X connect 9 0 8 0;
#X connect 9 1 12 1;
#X connect 10 0 11 0;
#X connect 11 0 8 1;
#X connect 12 0 66 0;
#X connect 13 0 6 0;
#X connect 13 1 1 0;
#X connect 13 2 6 1;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 17 1 19 0;
#X connect 19 0 18 1;
#X connect 20 0 21 0;
#X connect 21 0 15 0;
#X connect 22 0 24 0;
#X connect 22 1 29 0;
#X connect 23 0 22 0;
#X connect 24 0 26 0;
#X connect 24 1 27 0;
#X connect 27 0 26 1;
#X connect 28 0 46 1;
#X connect 29 0 46 1;
#X connect 30 0 23 0;
#X connect 30 1 31 0;
#X connect 30 2 28 0;
#X connect 31 0 25 0;
#X connect 32 0 33 1;
#X connect 32 0 47 0;
#X connect 33 0 35 0;
#X connect 34 0 41 0;
#X connect 35 0 34 0;
#X connect 36 0 33 0;
#X connect 36 1 43 0;
#X connect 37 0 32 0;
#X connect 37 1 34 1;
#X connect 38 0 33 0;
#X connect 38 1 39 1;
#X connect 39 0 40 0;
#X connect 40 0 38 0;
#X connect 41 1 42 0;
#X connect 42 0 39 0;
#X connect 42 1 9 0;
#X connect 43 0 46 0;
#X connect 44 0 30 0;
#X connect 45 0 36 0;
#X connect 45 1 43 1;
#X connect 46 0 57 0;
#X connect 48 0 12 2;
#X connect 48 1 50 0;
#X connect 49 0 55 0;
#X connect 50 0 51 0;
#X connect 51 0 49 0;
#X connect 52 0 49 0;
#X connect 52 0 59 0;
#X connect 52 1 53 0;
#X connect 53 0 58 0;
#X connect 53 1 60 0;
#X connect 54 1 48 0;
#X connect 55 0 56 0;
#X connect 55 1 49 1;
#X connect 56 0 61 0;
#X connect 56 1 37 0;
#X connect 57 0 52 0;
#X connect 58 0 54 0;
#X connect 61 0 62 0;
#X connect 62 0 63 0;
#X connect 63 0 64 0;
#X connect 64 0 65 0;
#X connect 65 0 12 2;
#X connect 65 1 37 0;
#X restore 24 144 pd parse_response;
#X text 113 279 old stuff;
#X text 51 9 load first!;
#X msg 21 35 \; reload_params bang \; automator 0 \; load_sounds ../txt/colorsounds_path_file.txt
;
#X restore 327 103 pd play sounds;
#N canvas 85 101 561 608 load 0;
#N canvas 619 219 450 300 load 0;
#X obj 59 55 iterate;
#X obj 59 77 t f f;
#X obj 59 99 text get filenames;
#X obj 62 174 list;
#X obj 62 216 soundfiler;
#X obj 55 20 inlet;
#X obj 250 224 outlet;
#X msg 62 194 read -resize \$1 c-\$2;
#X obj 59 121 list split 1;
#X text 150 119 <-- get path only;
#X connect 0 0 1 0;
#X connect 0 1 6 0;
#X connect 1 0 2 0;
#X connect 1 1 3 1;
#X connect 2 0 8 0;
#X connect 3 0 7 0;
#X connect 5 0 0 0;
#X connect 7 0 4 0;
#X connect 8 0 3 0;
#X restore 25 227 pd load arrays;
#X obj 49 331 iterate;
#X obj 49 353 t b f;
#X obj 49 375 array size;
#X obj 49 397 fd_sum;
#X obj 148 464 / 44100;
#X obj 148 486 / 60;
#X msg 98 353 symbol c-\$1;
#X obj 148 428 f;
#X obj 182 428 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 148 508 print total_minutes;
#X obj 58 24 r load_sounds;
#X obj 64 483 f;
#X obj 52 294 t f b f, f 34;
#X obj 129 385 t b b;
#X obj 64 505 s num_sounds;
#X obj 56 121 text define filenames;
#X obj 56 140 t b p;
#X text 157 24 text file with: path filename;
#X obj 56 162 text size -s text t;
#X msg 140 222 \; pd-arrays clear \, obj 10 10 clone fd_arrayclone
\$1 define c;
#X obj 52 204 t f f f;
#X obj 57 266 f;
#X msg 57 101 read -c \$1 \, bang;
#X obj 259 123 print load_sounds;
#X obj 30 183 sel;
#X obj 58 46 symbol;
#X obj 55 69 t a a;
#X connect 0 0 22 0;
#X connect 1 0 2 0;
#X connect 1 1 14 0;
#X connect 2 0 3 0;
#X connect 2 1 7 0;
#X connect 3 0 4 0;
#X connect 4 0 8 1;
#X connect 5 0 6 0;
#X connect 6 0 10 0;
#X connect 7 0 3 1;
#X connect 8 0 5 0;
#X connect 9 0 8 0;
#X connect 11 0 26 0;
#X connect 12 0 15 0;
#X connect 13 0 1 0;
#X connect 13 1 4 1;
#X connect 13 2 12 1;
#X connect 14 0 12 0;
#X connect 14 1 8 0;
#X connect 16 0 17 0;
#X connect 17 0 19 0;
#X connect 17 1 19 1;
#X connect 19 0 25 0;
#X connect 21 0 0 0;
#X connect 21 1 22 1;
#X connect 21 2 20 0;
#X connect 22 0 13 0;
#X connect 23 0 16 0;
#X connect 25 1 21 0;
#X connect 26 0 27 0;
#X connect 27 0 23 0;
#X connect 27 1 24 0;
#X restore 328 47 pd load sounds;
#X obj 23 10 declare -lib timbreIDLib -path ./lib;
#N canvas 213 133 495 419 instructions 0;
#X text 71 14 load with path to sound directory;
#X text 51 61 from terminal: load an analyze all;
#X msg 337 168 3;
#X msg 337 190 \; analyze_one \$1;
#X text 80 145 here : load an analyze only given index;
#X text 45 241 each instance has 9 features (one float each) and then
50 floats representing the bfcc and 50 floats for the barkSpec analysis
that was used;
#X text 50 324 OPTIONALLY:;
#X text 41 349 send a text file name to <params_file> with custom parameters
for analysis. Check the default parameters inside [pd feature_params]
;
#X msg 76 85 \; automator 1 \; load_sounds text_file_with_path_and_names.txt
;
#X msg 30 168 \; automator 0 \; load_sounds text_file_with_path_and_names.txt
;
#X connect 2 0 3 0;
#X restore 332 17 pd instructions;
#N canvas 0 22 450 300 analysis 0;
#N canvas 221 23 485 575 feature_params 0;
#X text 63 84 Specify your sample's sampling rate. (default: 44100)
;
#X text 62 120 Use power spectrum. (default: magnitude);
#X text 52 25 Change windowing function. Rectangular (0) \, Blackman
(1) \, Cosine (2) \, Hamming (3) \, or Hann (4). (default: Blackman)
;
#X text 52 224 If using the triangular Bark spaced filters \, you can
either sum or average the energy in each filter (default: sum);
#X text 57 162 Rather than sum energy in the triangular Bark spaced
filters to get the amount of energy in each Bark band \, you can average
energy in the unfiltered bins (default: OFF);
#X text 61 142 Construct a new filterbank with a specific spacing.
;
#X text 55 59 Change internal window size setting;
#X obj 243 365 text define -k default_params;
#A set \; analysis-avg_factor 8 \; analysis-overlap 1 \; analysis-window-size
4096 \; \; barkSpec window_function 1 \; barkSpec window 512 \; barkSpec
samplerate 44100 \; barkSpec power_spectrum 0 \; barkSpec filterbank
0.5 \; barkSpec spec_band_avg 0 \; barkSpec filter_avg 0 \; \; barkSpecIrregularity
normalize 1 \; barkSpecIrregularity algorithm 0 \; barkSpecRolloff
concentration 0.7 \; barkSpecBrightness boundary 8.5 \; barkSpecSlope
normalize 1 \; bfcc normalize 1 \; \; grain-size-low-set 40 \; grain-size-hi-set
50 \;;
#X obj 55 265 r params_file;
#X obj 55 285 symbol;
#X msg 55 306 read \$1 \, bang;
#X obj 55 330 text;
#X obj 243 390 t b p;
#X msg 243 412 line 0 \, auto;
#X obj 243 434 text sequence -s text t;
#X obj 243 338 loadbang;
#X obj 243 456 t a a;
#X obj 323 485 list split 1;
#X obj 242 485 list split 1;
#X obj 278 524 s;
#X obj 277 505 list trim;
#X obj 178 279 r reload_params;
#X obj 55 374 text size -s text t;
#X obj 55 352 t b p p;
#X obj 55 396 ==;
#X obj 55 418 sel;
#X obj 55 440 pointer;
#X obj 177 302 t b b;
#X obj 55 462 print;
#X obj 154 345 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 312 299 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X connect 7 0 12 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 23 0;
#X connect 12 0 13 0;
#X connect 12 1 14 1;
#X connect 13 0 14 0;
#X connect 14 0 16 0;
#X connect 15 0 7 0;
#X connect 16 0 18 0;
#X connect 16 1 17 0;
#X connect 17 0 19 1;
#X connect 18 1 20 0;
#X connect 20 0 19 0;
#X connect 21 0 27 0;
#X connect 22 0 24 0;
#X connect 23 0 22 0;
#X connect 23 1 26 1;
#X connect 23 2 22 1;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 7 0;
#X connect 26 0 28 0;
#X connect 27 0 11 0;
#X connect 27 1 7 0;
#X connect 29 0 11 0;
#X connect 30 0 27 0;
#X restore 204 70 pd feature_params;
#N canvas 280 24 851 384 feature_chain 0;
#X text 72 62 order is important!;
#X obj 183 298 s barkSpecIrregularity;
#X obj 183 276 s barkSpecSpread;
#X obj 183 254 s barkSpecCentroid;
#X obj 183 232 s barkSpecRolloff;
#X obj 183 210 s barkSpecFlatness;
#X obj 183 188 s barkSpecBrightness;
#X obj 183 164 s barkSpecSkewness;
#X obj 183 139 s barkSpecKurtosis;
#X obj 184 114 s barkSpecSlope;
#X text 330 162 |||||||, f 1;
#X obj 61 37 r feature_chain;
#X obj 61 85 t a a a a a a a a a a;
#X obj 422 144 featureAccum 9 1 0 concat;
#X obj 422 326 s timbreID;
#X obj 422 285 list;
#X obj 598 270 r barkSpec_analysis;
#X obj 629 130 r bfcc;
#X obj 629 199 bfcc;
#X obj 422 214 list;
#N canvas 306 0 809 628 first 0;
#X obj 442 520 barkSpecSlope;
#X obj 405 467 barkSpecKurtosis;
#X obj 339 417 barkSpecSkewness;
#X obj 297 366 barkSpecBrightness;
#X obj 263 307 barkSpecFlatness;
#X obj 218 259 barkSpecRolloff;
#X obj 186 201 barkSpecCentroid;
#X obj 150 142 barkSpecSpread;
#X obj 93 91 barkSpecIrregularity;
#X obj 92 70 r barkSpecIrregularity;
#X obj 149 122 r barkSpecSpread;
#X obj 187 179 r barkSpecCentroid;
#X obj 220 232 r barkSpecRolloff;
#X obj 260 287 r barkSpecFlatness;
#X obj 291 343 r barkSpecBrightness;
#X obj 339 394 r barkSpecSkewness;
#X obj 401 444 r barkSpecKurtosis;
#X obj 442 498 r barkSpecSlope;
#X msg 250 85 algorithm \$1;
#X obj 250 65 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 344 79 Change between Jensen (0) and Krimphoff (1) algorithm
, f 28;
#X text 276 63 IRREGULARITY;
#X msg 346 249 concentration 0.7;
#X text 497 242 Change the concentration threshold (0 - 1.0), f 26
;
#X text 355 224 ROLLOFF:;
#X floatatom 437 339 5 0 0 0 - - -;
#X msg 437 358 boundary \$1;
#X text 480 336 BRIGHTNESS:;
#X text 518 359 Change the boundary point in Barks (8.5);
#X text 458 556 first;
#X text 106 12 last;
#X obj 89 595 outlet;
#N canvas 211 86 1069 566 test 0;
#X msg 43 31 8;
#X obj 43 53 iterate;
#X obj 43 75 t b f;
#X obj 43 97 crand;
#X obj 44 229 featureAccum 8 1 0 mean;
#X obj 87 126 array set \$0-test;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-test 8 float 3;
#A 0 0.396752 0.209534 0.641065 0.374562 0.267488 0.670458 0.384194
0.143523;
#X coords 0 1 8 -1 200 140 1;
#X restore 233 39 graph;
#X obj 44 135 t f f;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-testsound 4096 float 2;
#X coords 0 1 4096 -1 200 140 1 0 0;
#X restore 446 39 graph;
#X obj 44 251 print;
#X msg 146 176 mean \, clear;
#X msg 229 198 bang;
#X obj 229 220 array sum \$0-test;
#X obj 282 259 array size \$0-test;
#X obj 229 242 t f b;
#X obj 229 264 /;
#X floatatom 229 286 5 0 0 0 - - -;
#X obj 801 72 iterate;
#X obj 801 94 t b f;
#X obj 811 211 array set \$0-testsound;
#X obj 811 179 / 40;
#X obj 801 116 crand;
#X obj 811 148 fd_gauss 0.9 0.01;
#X obj 526 348 barkSpec \$0-testsound;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-analysis 50 float 3;
#A 0 0.00421983 0.00173608 0.00275152 0.00271281 0.00209726 0.00319959
0.00235041 0.00224713 0.00517217 0.00556517 0.00270365 0.00286586 0.00467143
0.00561947 0.0054107 0.00501188 0.00622584 0.00516706 0.00647185 0.00666084
0.0104545 0.00915967 0.00820499 0.00748553 0.0109556 0.011052 0.0142485
0.0122566 0.0185897 0.0149205 0.0143305 0.018965 0.0210386 0.0216196
0.0219384 0.0263073 0.0299698 0.0289349 0.034907 0.0304378 0.0385829
0.0446238 0.0419459 0.04576 0.0512146 0.0565265 0.0581104 0.0650383
0.0701468 0.079414;
#X coords 0 1 50 -1 200 140 1 0 0;
#X restore 798 291 graph;
#X msg 801 50 4096;
#X obj 516 283 * 512;
#X msg 514 309 analyze \$1 512;
#X obj 541 419 featureAccum 8 50 0 mean;
#X msg 516 261 0 \, 1 \, 2 \, 3 \, 4 \, 5 \, 6 \, 7;
#X obj 266 466 barkSpec \$0-testsound;
#X msg 267 423 analyze;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-avg-anal 50 float 3;
#A 0 0.0384811 0.0171722 0.0171722 0.00451204 0.00365659 0.00350678
0.00360097 0.00384498 0.00515616 0.00507418 0.00488556 0.00477894 0.00412203
0.00382911 0.00484656 0.0064824 0.00629072 0.00383845 0.00598894 0.00582611
0.005398 0.00847653 0.00853401 0.00838234 0.0088406 0.0102452 0.0127117
0.013217 0.0147512 0.0121157 0.0150152 0.0177727 0.0167076 0.0189056
0.017563 0.0219687 0.0262249 0.0281571 0.0303883 0.0250934 0.0325833
0.0375831 0.0418415 0.0493696 0.0558561 0.0523949 0.0508557 0.0586996
0.0703851 0.0768961;
#X coords 0 1 50 -1 200 140 1;
#X restore 817 307 graph;
#X msg 665 286 window \$1;
#X obj 263 496 array set \$0-analysis;
#X obj 546 470 array set \$0-avg-anal;
#X msg 698 335 clear;
#X msg 440 302 mean;
#X obj 456 232 t b b b f;
#X msg 685 173 2048;
#X msg 698 195 4096;
#X msg 680 144 512;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 10 0;
#X connect 1 1 11 0;
#X connect 2 0 3 0;
#X connect 2 1 5 1;
#X connect 3 0 7 0;
#X connect 4 0 9 0;
#X connect 7 0 4 0;
#X connect 7 1 5 0;
#X connect 10 0 4 0;
#X connect 11 0 12 0;
#X connect 12 0 14 0;
#X connect 13 0 15 1;
#X connect 14 0 15 0;
#X connect 14 1 13 0;
#X connect 15 0 16 0;
#X connect 17 0 18 0;
#X connect 18 0 21 0;
#X connect 18 1 19 1;
#X connect 20 0 19 0;
#X connect 21 0 22 0;
#X connect 22 0 20 0;
#X connect 23 0 28 0;
#X connect 25 0 17 0;
#X connect 26 0 27 0;
#X connect 27 0 23 0;
#X connect 28 0 35 0;
#X connect 29 0 26 0;
#X connect 30 0 34 0;
#X connect 31 0 30 0;
#X connect 33 0 30 0;
#X connect 33 0 23 0;
#X connect 36 0 28 0;
#X connect 37 0 28 0;
#X connect 38 0 37 0;
#X connect 38 0 31 0;
#X connect 38 1 29 0;
#X connect 38 2 36 0;
#X connect 38 3 33 0;
#X connect 39 0 38 0;
#X connect 40 0 38 0;
#X connect 41 0 38 0;
#X restore 568 61 pd test accum;
#X msg 543 433 normalize 1;
#X connect 0 0 31 0;
#X connect 1 0 31 0;
#X connect 2 0 31 0;
#X connect 3 0 31 0;
#X connect 4 0 31 0;
#X connect 5 0 31 0;
#X connect 6 0 31 0;
#X connect 7 0 31 0;
#X connect 8 0 31 0;
#X connect 9 0 8 0;
#X connect 10 0 7 0;
#X connect 11 0 6 0;
#X connect 12 0 5 0;
#X connect 13 0 4 0;
#X connect 14 0 3 0;
#X connect 15 0 2 0;
#X connect 16 0 1 0;
#X connect 17 0 0 0;
#X connect 19 0 18 0;
#X connect 25 0 26 0;
#X restore 422 70 pd first 9 single-float features;
#X obj 446 119 r feature_accumulator;
#X connect 11 0 12 0;
#X connect 12 1 1 0;
#X connect 12 2 2 0;
#X connect 12 3 3 0;
#X connect 12 4 4 0;
#X connect 12 5 5 0;
#X connect 12 6 6 0;
#X connect 12 7 7 0;
#X connect 12 8 8 0;
#X connect 12 9 9 0;
#X connect 13 0 19 0;
#X connect 15 0 14 0;
#X connect 16 0 15 1;
#X connect 17 0 18 0;
#X connect 18 0 19 1;
#X connect 19 0 15 0;
#X connect 20 0 13 0;
#X connect 21 0 13 0;
#X restore 204 144 pd feature_chain;
#N canvas 699 180 450 402 barkSpec 0;
#X obj 35 233 list trim;
#X obj 35 69 barkSpec;
#X obj 35 37 r barkSpec;
#X obj 35 346 s feature_chain;
#X text 97 70 <-- analysis done once and passed with chain_ selector
;
#X obj 35 211 list prepend chain_barkSpec;
#X obj 236 346 s barkSpec_analysis;
#X obj 136 346 s bfcc;
#X obj 35 180 t a a, f 34;
#X msg 122 280 clear;
#X obj 122 302 s feature_accumulator;
#X obj 35 257 t a a b, f 15;
#X obj 35 143 featureAccum 8 50 0 mean;
#X obj 44 110 r barkSpec_accum;
#X connect 0 0 11 0;
#X connect 1 0 12 0;
#X connect 2 0 1 0;
#X connect 5 0 0 0;
#X connect 8 0 5 0;
#X connect 8 1 6 0;
#X connect 9 0 10 0;
#X connect 11 0 3 0;
#X connect 11 1 7 0;
#X connect 11 2 9 0;
#X connect 12 0 8 0;
#X connect 13 0 12 0;
#X restore 204 119 pd barkSpec;
#N canvas 168 70 704 637 iterate 0;
#X obj 94 227 until;
#X msg 140 226 0;
#X obj 399 54 r analysis-window-size;
#X obj 414 75 r analysis-overlap;
#X obj 94 206 f;
#X obj 94 274 f;
#X obj 399 105 /;
#X obj 243 191 /;
#X obj 124 274 +;
#X obj 57 100 t b b b b;
#X obj 294 78 t a a;
#X obj 243 122 t b a;
#X obj 243 144 array size;
#X msg 128 139 \; timbreID clear;
#X obj 258 170 r step_size;
#X obj 139 253 r step_size;
#X obj 399 126 s step_size;
#X obj 321 570 s barkSpec;
#X msg 322 296 set \$1;
#X msg 101 510 analyze \$1 \$2;
#X obj 57 15 r array_name;
#X obj 57 42 t b a;
#X msg 61 568 \; timbreID num_instances \;;
#X obj 100 410 iterate;
#X obj 100 388 f 1;
#X obj 140 312 r analysis-window_size;
#X obj 100 478 pack;
#X obj 99 360 t b f;
#X obj 149 434 t f f;
#X obj 100 432 * 512;
#X obj 100 454 +;
#X obj 247 227 r analysis-avg_factor;
#X obj 140 360 / 1;
#X obj 96 317 t f b;
#X msg 592 407 clear;
#X obj 462 525 s barkSpec_accum;
#X msg 372 483 mean;
#X msg 436 430 num_frames \$1;
#X obj 167 359 t f f f;
#X text 412 482 <-- output features once factor is done;
#X obj 247 249 moses;
#X msg 243 275 1;
#X connect 0 0 5 0;
#X connect 1 0 5 1;
#X connect 2 0 6 0;
#X connect 3 0 6 1;
#X connect 4 0 0 0;
#X connect 5 0 8 0;
#X connect 5 0 33 0;
#X connect 6 0 16 0;
#X connect 7 0 4 1;
#X connect 8 0 5 1;
#X connect 9 0 22 0;
#X connect 9 1 4 0;
#X connect 9 2 1 0;
#X connect 9 3 13 0;
#X connect 10 0 11 0;
#X connect 10 1 18 0;
#X connect 11 0 12 0;
#X connect 11 1 12 1;
#X connect 12 0 7 0;
#X connect 14 0 7 1;
#X connect 15 0 8 1;
#X connect 18 0 17 0;
#X connect 19 0 17 0;
#X connect 20 0 21 0;
#X connect 21 0 9 0;
#X connect 21 1 10 0;
#X connect 23 0 29 0;
#X connect 23 1 36 0;
#X connect 24 0 23 0;
#X connect 25 0 32 0;
#X connect 26 0 19 0;
#X connect 27 0 24 0;
#X connect 27 1 30 1;
#X connect 28 0 29 1;
#X connect 28 1 26 1;
#X connect 29 0 30 0;
#X connect 30 0 26 0;
#X connect 31 0 40 0;
#X connect 32 0 28 0;
#X connect 33 0 27 0;
#X connect 33 1 34 0;
#X connect 34 0 35 0;
#X connect 36 0 35 0;
#X connect 37 0 35 0;
#X connect 38 0 32 1;
#X connect 38 1 24 1;
#X connect 38 2 37 0;
#X connect 40 0 41 0;
#X connect 40 1 38 0;
#X connect 41 0 38 0;
#X restore 204 93 pd iterate;
#X text 90 119 analyze -->;
#X text 176 85 |||||||, f 1;
#N canvas 531 191 454 310 write_timid 0;
#X obj 182 67 text get filenames;
#X obj 182 45 r array_idx;
#X obj 58 32 r write_timid;
#X obj 93 65 r data_dir;
#X obj 59 114 symbol;
#X obj 182 88 list split 1;
#X obj 93 88 symbol;
#X obj 206 134 makefilename %%s/%s.timid;
#X obj 209 112 symbol;
#X msg 206 156 set \$1;
#X obj 60 199 makefilename;
#X msg 60 231 \; timbreID write \$1 \; done_writing bang;
#X connect 0 0 5 0;
#X connect 1 0 0 0;
#X connect 2 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 10 0;
#X connect 5 1 8 0;
#X connect 6 0 4 1;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X restore 204 168 pd write_timid;
#N canvas 0 22 450 300 timbreID 0;
#X obj 116 41 timbreID;
#X obj 116 17 r timbreID;
#X obj 161 71 route num_instances;
#X obj 161 93 !=;
#X obj 198 136 r array_name;
#X obj 181 160 symbol;
#X msg 181 182 something went wrong with array <\$1> \, no instances
recorded, f 20;
#X obj 179 230 print error;
#X obj 161 115 sel 1 0;
#X obj 161 253 s write_timid;
#X connect 0 3 2 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 8 0;
#X connect 4 0 5 1;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 8 1 5 0;
#X restore 155 44 pd timbreID;
#N canvas 0 22 450 300 automator 0;
#X obj 161 25 r num_sounds;
#X obj 38 25 r done_writing;
#X obj 161 125 f;
#X obj 161 66 t b f;
#X obj 190 124 + 1;
#X msg 162 94 0;
#X obj 174 152 moses;
#X msg 337 83 quitting...;
#X obj 284 93 t b b;
#X msg 284 115 3000;
#X obj 284 137 del;
#X msg 284 159 \; pd quit;
#X msg 49 222 \; array_idx \$1 \; array_name symbol c-\$1;
#X obj 139 183 t f f;
#X obj 349 255 print status;
#X msg 231 215 analyzing \$1 ...;
#X obj 32 62 spigot;
#X obj 161 45 spigot;
#X obj 313 14 r automator;
#X obj 313 36 print automator;
#X obj 39 124 r analyze_one;
#X msg 39 146 0;
#X connect 0 0 17 0;
#X connect 1 0 16 0;
#X connect 2 0 4 0;
#X connect 2 0 6 0;
#X connect 3 0 5 0;
#X connect 3 1 6 1;
#X connect 4 0 2 1;
#X connect 5 0 2 0;
#X connect 6 0 13 0;
#X connect 6 1 8 0;
#X connect 7 0 14 0;
#X connect 8 0 9 0;
#X connect 8 1 7 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 13 0 12 0;
#X connect 13 1 15 0;
#X connect 15 0 14 0;
#X connect 16 0 2 0;
#X connect 17 0 3 0;
#X connect 18 0 17 1;
#X connect 18 0 16 1;
#X connect 18 0 19 0;
#X connect 20 0 21 0;
#X connect 21 0 13 0;
#X restore 158 201 pd automator;
#X restore 328 131 pd analysis;
#N canvas 209 319 450 300 netreceive 0;
#X msg 108 44 listen 5002;
#X obj 108 66 netreceive;
#X obj 108 88 t a a;
#X obj 108 110 list split 1;
#X obj 154 137 list split 1;
#X obj 112 211 s, f 7;
#X obj 121 161 list trim;
#X obj 137 191 symbol;
#X obj 268 85 r tester;
#X obj 268 107 print;
#X obj 106 13 loadbang;
#X obj 229 12 r to_live_query;
#X obj 229 34 list prepend send;
#X obj 229 56 list trim;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 3 1 6 0;
#X connect 4 0 7 0;
#X connect 6 0 5 0;
#X connect 7 0 5 1;
#X connect 8 0 9 0;
#X connect 10 0 0 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 1 0;
#X restore 318 181 pd netreceive;
#N canvas 0 22 450 300 dacout 0;
#X obj 232 159 clone -s 1 fd_dacout 2 vol;
#X obj 232 181 env~;
#X obj 232 203 - 100;
#X obj 232 225 s env;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X restore 324 158 pd dacout;
#X obj 22 54 vsl 15 128 0 127 0 0 vol vol-set vol 0 -9 0 10 -262144
-1 -1 9300 1;
#X obj 46 64 vu 15 120 env env -1 -8 0 10 -66577 -1 1 0;
#X obj 105 72 hsl 128 15 25 300 0 0 grain-size-low grain-size-low-set
grain-size-low -2 -8 0 12 -262144 -1 -1 1293 1;
#X floatatom 240 70 5 0 0 1 percent grain-size-low -;
#X obj 107 111 hsl 128 15 25 300 0 0 grain-size-hi grain-size-hi-set
grain-size-hi -2 -8 0 12 -262144 -1 -1 2955 1;
#X floatatom 244 110 5 0 0 1 percent grain-size-hi -;
#X obj 105 145 bng 15 250 50 0 load_play_sounds load_play_sounds-set
load_play_sounds 17 7 0 10 -204786 -1 -1;
